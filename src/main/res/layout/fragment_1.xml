<?xml version="1.0" encoding="utf-8"?>

<!--first of all you have to change
	the layout as CoordinatorLayout.
	This is the first thing we need to do.-->
<androidx.coordinatorlayout.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Fragment1">

    <!--AppBarLayout helps the toolbar and other components to react on
        scroll changes. I am using Dark theme for AppBarLayout.
        Inside this AppBarLayout i
        have used CollapsingToolbarLayout. -->
    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appBarLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

        <!-- In CollapsingToolbarLayout some important attributes are:
        i) app:layout_scrollFlags which is used to specify how collapsing
            layout behaves when content is scrolled.I have used
            app:layout_scrollFlags="scroll|snap|exitUntilCollapsed"
            so it will scroll until it's is completely collapsed.
        ii) app:contentScrim="@color/green" that specifies the color
            of the collapsed toolbar -->
        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:contentScrim="@color/green"
            app:layout_scrollFlags="scroll|snap|exitUntilCollapsed"
            app:title="@string/app_name">

            <!--We are adding the image that we have added earlier
                in the drawable folder.The attribute app:layout_collapseMode="parallax"
                causes the image to move when user scrolls at a specific ratio. -->
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="250dp"
                android:scaleType="centerCrop"
                android:src="@drawable/dog1"
                app:layout_collapseMode="parallax" />

            <!-- The attribute app:layout_collapseMode="pin" is set so that
                sticks to the top when the user scrolls the view up-->
            <androidx.appcompat.widget.Toolbar
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />

        </com.google.android.material.appbar.CollapsingToolbarLayout>

    </com.google.android.material.appbar.AppBarLayout>


    <!--Now add the NestedScrollView-->
    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">


        <!--In textview we will be adding the text that i have
            added earlier in strings.xml file.This is simply the
            the content to be scrolled -->
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:lineSpacingExtra="8sp"
            android:padding="16dp"
            android:text="@string/content"
            android:textSize="20sp" />


    </androidx.core.widget.NestedScrollView>
    <Button
        android:id="@+id/storage"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Storage"
        android:layout_gravity="start|bottom"
        android:layout_marginTop="16dp"
        android:padding="8dp"
        android:layout_marginStart="14dp"
        android:layout_marginBottom="15dp"
        android:layout_below="@id/toolbar"
        android:layout_centerHorizontal="true"/>

<!--    <com.google.android.material.floatingactionbutton.FloatingActionButton-->
<!--        android:id="@+id/edit"-->
<!--        android:layout_width="wrap_content"-->
<!--        android:layout_height="wrap_content"-->
<!--        android:layout_gravity="end|bottom"-->
<!--        android:layout_marginEnd="16dp"-->
<!--        android:layout_marginBottom="16dp"-->

<!--        android:contentDescription="edit"-->
<!--        android:src="@drawable/edit"-->
<!--        app:fabSize="normal"-->
<!--        app:layout_constraintBottom_toBottomOf="parent"-->
<!--        app:layout_constraintEnd_toEndOf="parent" />-->

    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/add_fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="end|bottom"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:src="@drawable/add"
        app:fabSize="normal"
        app:layout_constraintBottom_toTopOf="@id/edit"
        app:layout_constraintEnd_toEndOf="parent" />

    <!--Action name text for the add alarm button-->
    <!--Make sure that you are constraining this Text to
        the add Alarm FAB button-->
    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/edit"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:visibility="invisible"
        android:layout_marginBottom="78dp"
        android:layout_marginEnd="16dp"
        app:fabSize="normal"
        android:layout_gravity="bottom|end"
        android:src="@drawable/edit" />

    <TextView
        android:id="@+id/edit_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="80dp"
        android:text="edit"
        android:textStyle="bold"
        android:layout_marginBottom="88dp"
        android:visibility="invisible"
        android:layout_gravity="bottom|end"
        app:layout_constraintBottom_toTopOf="@+id/edit"
        app:layout_constraintEnd_toStartOf="@+id/edit"
        app:layout_constraintTop_toTopOf="@+id/edit" />


</androidx.coordinatorlayout.widget.CoordinatorLayout>



